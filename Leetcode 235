   bool find(TreeNode* root,int data){
    TreeNode *cur = root;
    while(cur!=NULL){
         if(data==cur->val){
             return true;
         }
         if(data<cur->val){
             cur = cur->left;
    }
    else{
        cur = cur->right;
    }
    }
    return false;
}
    
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
    TreeNode *lca = NULL, *cur = root;
    while(cur!=NULL){
        if(p->val<cur->val && q->val<cur->val){
    cur = cur->left;
}
else if(p->val>cur->val && q->val>cur->val){
    cur = cur->right;
}
  //(p->val<cur->val && cur->val<q->val) || (p->val==cur->val || cur->val==q->val)
else{          
    
    lca = cur;
    break;
}
}
return (lca != NULL && find(lca, p->val) && find(lca, q->val)) ? lca : NULL;
}
