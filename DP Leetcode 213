class Solution {
public:
      int rob_(vector<int> &nums,int s,int e,vector<int> &dp){
          if(s>e){
              return 0;
          }
          if(dp[s]!=-1){
              return dp[s];
          }
          int incl=nums[s]+rob_(nums,s+2,e,dp);
          int nonincl=rob_(nums,s+1,e,dp);
          return dp[s]=max(incl,nonincl);
      }
    
    
    
    int rob(vector<int>& nums) {
        int n=nums.size();
         vector<int> dp1(n,-1);
        vector<int> dp2(n,-1);
         return max(nums[0]+rob_(nums,2,n-2,dp1),rob_(nums,1,n-1,dp2));
    }
};
