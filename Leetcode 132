class Solution {
public:
    int mincut_(string s,int si,vector<vector<bool>> &pdp,vector<int> &dp){
        int n=s.size()-1;
        if(pdp[si][n]){
            return dp[si]=0;
        }
        if(dp[si]!=-1){
            return dp[si];
        }
        int minc=1e9;
        for(int i=si;i<n;i++){
            if(pdp[si][i]){
              minc=min(minc, mincut_(s,i+1,pdp,dp)+1) ;
            }
        }
        return dp[si]=minc;
    }
    int minCut(string s) {
        int n=s.size();
        vector<vector<bool>> pdp(n,vector<bool>(n));
        for(int gap=0;gap<n;gap++){
            for(int i=0,j=gap;j<n;i++,j++){
                if(gap==0){
                    pdp[i][j]=true;
                }
                else if(gap==1 && s[i]==s[j]){
                    pdp[i][j]=true;
                }
                else if(s[i]==s[j]){
                    pdp[i][j]=(pdp[i+1][j-1])?true:false;
                }
                else{
                    pdp[i][j]=false;
                }
            }
        }
        vector<int> dp(n+1,-1);
        return mincut_(s,0,pdp,dp);
    }
};
